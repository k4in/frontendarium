/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ComponentsRouteRouteImport } from './routes/components/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ComponentsIndexRouteImport } from './routes/components/index'
import { Route as ComponentsSelectRouteImport } from './routes/components/select'
import { Route as ComponentsButtonRouteImport } from './routes/components/button'

const ComponentsRouteRoute = ComponentsRouteRouteImport.update({
  id: '/components',
  path: '/components',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsIndexRoute = ComponentsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsSelectRoute = ComponentsSelectRouteImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsButtonRoute = ComponentsButtonRouteImport.update({
  id: '/button',
  path: '/button',
  getParentRoute: () => ComponentsRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/components': typeof ComponentsRouteRouteWithChildren
  '/components/button': typeof ComponentsButtonRoute
  '/components/select': typeof ComponentsSelectRoute
  '/components/': typeof ComponentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/components/button': typeof ComponentsButtonRoute
  '/components/select': typeof ComponentsSelectRoute
  '/components': typeof ComponentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/components': typeof ComponentsRouteRouteWithChildren
  '/components/button': typeof ComponentsButtonRoute
  '/components/select': typeof ComponentsSelectRoute
  '/components/': typeof ComponentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/components'
    | '/components/button'
    | '/components/select'
    | '/components/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/components/button' | '/components/select' | '/components'
  id:
    | '__root__'
    | '/'
    | '/components'
    | '/components/button'
    | '/components/select'
    | '/components/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ComponentsRouteRoute: typeof ComponentsRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/components': {
      id: '/components'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/': {
      id: '/components/'
      path: '/'
      fullPath: '/components/'
      preLoaderRoute: typeof ComponentsIndexRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components/select': {
      id: '/components/select'
      path: '/select'
      fullPath: '/components/select'
      preLoaderRoute: typeof ComponentsSelectRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components/button': {
      id: '/components/button'
      path: '/button'
      fullPath: '/components/button'
      preLoaderRoute: typeof ComponentsButtonRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
  }
}

interface ComponentsRouteRouteChildren {
  ComponentsButtonRoute: typeof ComponentsButtonRoute
  ComponentsSelectRoute: typeof ComponentsSelectRoute
  ComponentsIndexRoute: typeof ComponentsIndexRoute
}

const ComponentsRouteRouteChildren: ComponentsRouteRouteChildren = {
  ComponentsButtonRoute: ComponentsButtonRoute,
  ComponentsSelectRoute: ComponentsSelectRoute,
  ComponentsIndexRoute: ComponentsIndexRoute,
}

const ComponentsRouteRouteWithChildren = ComponentsRouteRoute._addFileChildren(
  ComponentsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ComponentsRouteRoute: ComponentsRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
